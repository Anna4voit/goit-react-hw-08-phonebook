{"version":3,"file":"static/js/9.47c99e7e.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = store => store.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectContacts = store => store.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"text\":\"ContactList_text__+NWAW\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/selectors';\n\nimport { deleteContact } from '../../redux/contacts-operations';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const contact = contacts.map(({ id, name, number }) => (\n    <li className={css.list} key={id}>\n      <p className={css.text}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => handleDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul>{contact}</ul>;\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form_input\":\"ContactForm_form_input__juvV+\",\"btn\":\"ContactForm_btn__wll+u\",\"label\":\"ContactForm_label__-cVXI\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts-operations';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const nameId = nanoid();\n  const phoneId = nanoid();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const data = { name, number };\n    dispatch(addContact(data));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.form_input}>\n        <div className={css.label}>\n          <label htmlFor={nameId}>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            id={nameId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n        </div>\n\n        <div className={css.label}>\n          <label htmlFor={phoneId}>Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            id={phoneId}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            required\n          />\n        </div>\n      </div>\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter-slice';\nimport { selectFilter } from '../../redux/selectors';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={changeFilter}\n          required\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Contacts_box__L7FJb\",\"title\":\"Contacts_title__-mq9F\",\"subtitle\":\"Contacts_subtitle__GxPSr\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectError, selectIsLoading } from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/contacts-operations';\nimport Loader from 'components/Loader/Loader';\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={css.box}>\n      <div>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className={css.boxContacts}>\n        <h2 className={css.subtitle}>Contacts</h2>\n        <Filter />\n        {loading && <Loader />}\n        {error && <p>{error}</p>}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from '../../components/Contacts/Contacts';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","store","filter","selectError","state","contacts","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","contact","name","includes","ContactList","dispatch","useDispatch","useSelector","map","_ref","id","number","_jsxs","className","css","children","_jsx","type","onClick","deleteContact","handleDeleteContact","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","ContactForm","nameId","phoneId","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","event","_event$currentTarget","currentTarget","value","onSubmit","preventDefault","data","addContact","htmlFor","onChange","pattern","required","Filter","filterValue","setFilter","target","loading","useEffect","fetchContacts","Loader","Contacts"],"sourceRoot":""}